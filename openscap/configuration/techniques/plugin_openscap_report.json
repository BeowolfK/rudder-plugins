{
    "bundle_name": "plugin_openscap_policies",
    "description": "## Summary\n\nThis technique triggers an OpenSCAP audit every day, between 2:00 and 8:00 by default, and sends the report to the Rudder Server to be displayed on the Node Details.\n\n## Usage\n\nThis Technique takes 2 parameters:\n\n* *profile*: name of the profile to check (e.g. RHEL6-Default)\n* *scap_file*: XCCDF Checklist file (e.g XCCDF Checklist)\n\nWhen a Directive based on this Technique is applied on a Node, a new tab _OpenSCAP_ is available for this node, displaying a sanitized (no JS, no CSS) version of the reports, plus a link to download the raw version.\n\n## Resource\n\nAn introduction to OpenSCAP is available [here](https://www.open-scap.org/getting-started/) that explains the concepts of profile, and checklist file",
    "name": "plugin_openscap_policies",
    "version": "1.0",
    "category" :"OpenSCAP_Policies_plugin",
    "parameter": [
      {
        "id": "0bad6c1e-59c9-44ca-a935-210af4188643",
        "name": "profile",
        "description": "name of the profile to check (e.g. RHEL7-Default)"
      },
      {
        "id": "182dffe7-4310-4e01-bdd0-3f7db8272e2f",
        "name": "scap_file",
        "description": "XCCDF Checklist file (e.g. /path/to//U_RHEL_7_V2R7_STIG_SCAP_1-2_Benchmark.xml)"
      }
    ],
    "method_calls": [
      {
        "args": [
          "openscap",
          "${system_common.agent_run_interval}",
          "0",
          "6",
          "0",
          "2",
          "0",
          "0",
          "0",
          "1",
          "nodups"
        ],
        "class_context": "any",
        "method_name": "schedule_simple",
        "component": "Schedule Simple"
      },
      {
        "args": [
          "openscap",
          "packages",
          "ssg-base,ssg-debderived,ssg-debian,ssg-nondebian,ssg-applications",
          ","
        ],
        "class_context": "debian_10",
        "method_name": "variable_iterator",
        "component": "OpenSCAP packages"
      },
      {
        "args": [
          "openscap",
          "packages",
          "libopenscap8",
          ","
        ],
        "class_context": "debian_9",
        "method_name": "variable_iterator",
        "component": "OpenSCAP packages"
      },
      {
        "args": [
          "openscap",
          "packages",
          "ssg-base,ssg-debderived,ssg-debian,ssg-nondebian,ssg-applications",
          ","
        ],
        "class_context": "ubuntu_18",
        "method_name": "variable_iterator",
        "component": "OpenSCAP packages"
      },
      {
        "args": [
          "openscap",
          "packages",
          "scap-security-guide,openscap-scanner",
          ","
        ],
        "class_context": "redhat",
        "method_name": "variable_iterator",
        "component": "OpenSCAP packages"
      },
      {
        "args": [
          "openscap",
          "packages",
          "openscap",
          ","
        ],
        "class_context": "SUSE.(!sles_10)",
        "method_name": "variable_iterator",
        "component": "OpenSCAP packages"
      },
      {
        "args": [
          "${openscap.packages}",
          "",
          "",
          ""
        ],
        "class_context": "any",
        "method_name": "package_present",
        "component": "Package present"
      },
      {
        "args": [
          "oscap xccdf eval --profile ${profile} --report /var/rudder/tmp/openscap_report.html ${scap_file}",
          "0,2",
          "254"
        ],
        "class_context": "any.(schedule_simple_openscap_repaired)",
        "method_name": "command_execution_result",
        "component": "run scan Openscap"
      },
      {
        "args": [
          "root",
          "openscap_report.html",
          "/var/rudder/tmp/openscap_report.html",
          "1d"
        ],
        "class_context": "any.(schedule_simple_openscap_repaired)",
        "method_name": "sharedfile_to_node",
        "component": "send report to server"
      }
    ]
}
