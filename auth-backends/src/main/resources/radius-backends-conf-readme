This file contains the configuration properties that need to be added in
/opt/rudder/etc/rudder-web.properties file to configure the Radius
authentication backend.

For convenience, the part under "---- add in rudder-web.properties----" can
be directly added in your /opt/rudder/etc/rudder-web.properties file.

Note that key "rudder.auth.provider" is likelly to already exists. In
that case, just update it with the sequence of authentication backend
you want to try.



---- add in rudder-web.properties----

###########################
# Rudder Authentication    #############################################################
###########################

#
# By default, both authentication and authorization are handle in the rudder-users.xml
# file. But you may want to rely on your existing Radius server
# to take care of the authentication part.
# To choose the scheme to use, either use 'file' or 'radius' for the rudder.auth.provider
# parameter.
# You can also use a comma separated list of authentication provider to use,
# like 'radius, file' in which case each one will be tested in turned for authentication.
#
# When set to 'radius', passwords in rudder-users.xml are ignored and the
# authentication is delegated to the Radius server configured below.
# By convention, when Radius authentication is enable, 'password' field in
# rudder-users.xml are set to 'RADIUS'
#
# Comma separated list of authentication providers.
#
rudder.auth.provider=radius

###########################
# Radius Authentication    #############################################################
###########################

#
# The following parameters allow to configure authentication with a
# Radius server.
#


#
# Use "radius" auth type to enable radius authentication
#
#rudder.auth.provider=file,radius

#
# IP or hostname of the Radius server. Both work, but it is prefered to use an IP.
#
rudder.auth.radius.host.name=192.168.42.80

#
# Authentication port for the Radius server
#
rudder.auth.radius.host.auth.port=1812

#
# The shared secret as configured in your Radius server for Rudder application / host.
#
rudder.auth.radius.host.sharedSecret=secret

#
# Time to wait in seconds when trying to connect to the server before giving up.
#
rudder.auth.radius.auth.timeout=10

#
# Number of retries to attempt in case of timeout before giving up.
#
rudder.auth.radius.auth.retries=0

#
# Authentication protocol to use to connect to the Radius server. The default one is 'pap' (PAP).
# Available protocols::
# - pap
# - chap
# - eap-md5
# - eap-ttls
#
# For `eap-ttls`, you can append `key=value` parameters, separated by `:` to the protocol name to
# specify protocol option, for example: `eap-tls:keyFile=keystore:keyPassword=mypass`
#
rudder.auth.radius.auth.protocol=pap

